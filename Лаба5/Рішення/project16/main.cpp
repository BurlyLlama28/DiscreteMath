#include <bits/stdc++.h>
using namespace std;


   int N ;//кількість вершин
   int a , b , w;//початок , кінець, вага
   int am[100][100];//суміжність

   int dis[100];//відстань
   int visited[100];

int dijkstra(int x){
    visited[x]=1;
    for(int i=0; i<=N; i++){
        if((visited[i]==0)&&(am[x][i]!=-1)){
            if((dis[x]+am[x][i]<dis[i])||(dis[i]==-1)){
                dis[i]=dis[x]+am[x][i];
                cout << am[x][i]<< " ";
            }
        }
    }

    int smal=-1 ,sw=-1;
    for(int i=0; i<=N;i++){
        if(visited[i]==0&&(dis[i]>=0)&&((sw>dis[i])||sw==-1)){
            sw=dis[i];
            smal=i;
        }
    }
    if(smal!=-1){
            dijkstra(smal);
            return 0;
    }
}

int main()
{

   N=30;
   for(int i=0; i<=N; i++){
    for(int j=0; j<=N; j++){
        am[i][j]=-1;
    }
   }

   for(int i=0; i<=N; i++){
    visited[i]=0;
   }
    for(int i=0; i<=N; i++){
    dis[i]=-1;
   }
   dis[1]=0;

    am[1][2]=am[2][1]=7;
    am[1][7]=am[7][1]=4;
    am[2][3]=am[3][2]=5;
    am[2][8]=am[8][2]=3;
    am[3][4]=am[4][3]=3;
    am[3][9]=am[9][3]=3;
    am[4][5]=am[5][4]=8;
    am[4][10]=am[10][4]=4;
    am[5][6]=am[6][5]=6;
    am[5][11]=am[11][5]=4;
    am[6][12]=am[12][6]=1;
    am[7][8]=am[8][7]=2;
    am[7][13]=am[13][7]=7;
    am[8][9]=am[9][8]=7;
    am[8][14]=am[14][8]=1;
    am[9][10]=am[10][9]=1;
    am[9][15]=am[15][9]=7;
    am[10][11]=am[11][10]=2;
    am[10][16]=am[16][10]=4;
    am[11][12]=am[12][11]=8;
    am[11][17]=am[17][11]=1;
    am[12][18]=am[18][11]=3;
    am[13][14]=am[14][13]=4;
    am[13][19]=am[19][13]=7;
    am[14][15]=am[15][14]=5;
    am[14][20]=am[20][14]=1;
    am[15][16]=am[16][15]=2;
    am[15][21]=am[21][15]=6;
    am[16][17]=am[17][16]=7;
    am[16][22]=am[22][16]=7;
    am[17][18]=am[18][17]=7;
    am[17][23]=am[23][17]=4;
    am[18][24]=am[24][18]=5;
    am[19][20]=am[20][19]=1;
    am[19][25]=am[25][19]=2;
    am[20][21]=am[21][20]=3;
    am[20][26]=am[26][20]=2;
    am[21][22]=am[22][21]=1;
    am[21][27]=am[27][21]=1;
    am[22][23]=am[23][22]=1;
    am[22][28]=am[28][22]=8;
    am[23][29]=am[29][23]=3;
    am[23][24]=am[24][23]=5;
    am[24][30]=am[30][24]=8;
    am[25][26]=am[26][25]=3;
    am[26][27]=am[27][26]=3;
    am[27][28]=am[28][27]=3;
    am[28][29]=am[29][28]=3;
    am[29][30]=am[30][29]=1;

   dijkstra(1);
   cout<< "\n" << dis[N];
}
